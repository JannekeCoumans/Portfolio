{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\31622\\\\Documents\\\\React Apps\\\\portfolio\\\\src\\\\components\\\\OverViewContributions\\\\OverViewContributions.js\";\nimport React, { Component } from \"react\";\nimport { VictoryChart, VictoryLine, VictoryAxis } from \"victory\";\nimport { ContentHeader, settings } from \"config/C4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OverViewContributions extends Component {\n  constructor() {\n    super();\n    this.state = {\n      contributions: {},\n      monthlyContributions: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.getContributions();\n    this.setContributionData();\n  }\n\n  async getContributions() {\n    const {\n      accessToken\n    } = settings;\n    const headers = {\n      Authorization: `bearer ${accessToken}`\n    };\n    const body = {\n      query: `query {\n                user(login: \"JannekeCoumans\") {\n                  name\n                  contributionsCollection {\n                    contributionCalendar {\n                      totalContributions\n                      weeks {\n                        contributionDays {\n                          contributionCount\n                        }\n                        firstDay\n                      }\n                    }\n                  }\n                }\n              }`\n    };\n    const response = await fetch(\"https://api.github.com/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: headers\n    });\n    const result = await response.json();\n\n    if (!result.errors && result.data) {\n      this.setState({\n        contributions: result.data\n      });\n    }\n  }\n\n  setContributionData() {\n    const {\n      contributions\n    } = this.state;\n    const months = {\n      1: {\n        contributions: 0,\n        nameOfMonth: 'January',\n        year: null\n      },\n      2: {\n        contributions: 0,\n        nameOfMonth: 'Februari',\n        year: null\n      },\n      3: {\n        contributions: 0,\n        nameOfMonth: 'March',\n        year: null\n      },\n      4: {\n        contributions: 0,\n        nameOfMonth: 'April',\n        year: null\n      },\n      5: {\n        contributions: 0,\n        nameOfMonth: 'May',\n        year: null\n      },\n      6: {\n        contributions: 0,\n        nameOfMonth: 'June',\n        year: null\n      },\n      7: {\n        contributions: 0,\n        nameOfMonth: 'July',\n        year: null\n      },\n      8: {\n        contributions: 0,\n        nameOfMonth: 'August',\n        year: null\n      },\n      9: {\n        contributions: 0,\n        nameOfMonth: 'September',\n        year: null\n      },\n      10: {\n        contributions: 0,\n        nameOfMonth: 'October',\n        year: null\n      },\n      11: {\n        contributions: 0,\n        nameOfMonth: 'November',\n        year: null\n      },\n      12: {\n        contributions: 0,\n        nameOfMonth: 'December',\n        year: null\n      }\n    };\n\n    if (contributions && contributions.user) {\n      const contributionWeeks = Object.values(contributions.user.contributionsCollection.contributionCalendar.weeks);\n      contributionWeeks.map(week => {\n        let weeklyContributions = null;\n        week.contributionDays.map(item => weeklyContributions = weeklyContributions + item.contributionCount);\n        const date = new Date(week.firstDay);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        months[month].year = year;\n        months[month].contributions += weeklyContributions;\n      });\n    }\n\n    this.setState({\n      monthlyContributions: months\n    });\n  }\n\n  render() {\n    const {\n      monthlyContributions\n    } = this.state;\n    const chartData = Object.values(monthlyContributions).map(month => {\n      return {\n        x: `${month.nameOfMonth}, ${month.year}`,\n        y: month.contributions\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overViewContributions\",\n      children: [/*#__PURE__*/_jsxDEV(ContentHeader, {\n        title: \"github contributions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VictoryChart, {\n        children: /*#__PURE__*/_jsxDEV(VictoryLine, {\n          style: {\n            data: {\n              stroke: \"#c43a31\"\n            },\n            parent: {\n              border: \"1px solid #ccc\"\n            }\n          },\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default OverViewContributions;","map":{"version":3,"sources":["C:/Users/31622/Documents/React Apps/portfolio/src/components/OverViewContributions/OverViewContributions.js"],"names":["React","Component","VictoryChart","VictoryLine","VictoryAxis","ContentHeader","settings","OverViewContributions","constructor","state","contributions","monthlyContributions","componentDidMount","getContributions","setContributionData","accessToken","headers","Authorization","body","query","response","fetch","method","JSON","stringify","result","json","errors","data","setState","months","nameOfMonth","year","user","contributionWeeks","Object","values","contributionsCollection","contributionCalendar","weeks","map","week","weeklyContributions","contributionDays","item","contributionCount","date","Date","firstDay","getFullYear","month","getMonth","render","chartData","x","y","stroke","parent","border"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { VictoryChart, VictoryLine, VictoryAxis } from \"victory\";\r\nimport { ContentHeader, settings } from \"config/C4\";\r\n\r\nclass OverViewContributions extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contributions: {},\r\n      monthlyContributions: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getContributions();\r\n    this.setContributionData();\r\n  }\r\n\r\n  async getContributions() {\r\n    const { accessToken } = settings;\r\n    const headers = {\r\n      Authorization: `bearer ${accessToken}`,\r\n    };\r\n    const body = {\r\n      query: `query {\r\n                user(login: \"JannekeCoumans\") {\r\n                  name\r\n                  contributionsCollection {\r\n                    contributionCalendar {\r\n                      totalContributions\r\n                      weeks {\r\n                        contributionDays {\r\n                          contributionCount\r\n                        }\r\n                        firstDay\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }`,\r\n    };\r\n    const response = await fetch(\"https://api.github.com/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: headers,\r\n    });\r\n    const result = await response.json();\r\n    if (!result.errors && result.data) {\r\n      this.setState({ contributions: result.data });\r\n    }\r\n  }\r\n\r\n  setContributionData() {\r\n    const { contributions } = this.state;\r\n    const months = {\r\n      1: {contributions: 0, nameOfMonth: 'January', year: null},\r\n      2: {contributions: 0, nameOfMonth: 'Februari', year: null},\r\n      3: {contributions: 0, nameOfMonth: 'March', year: null},\r\n      4: {contributions: 0, nameOfMonth: 'April', year: null},\r\n      5: {contributions: 0, nameOfMonth: 'May', year: null},\r\n      6: {contributions: 0, nameOfMonth: 'June', year: null},\r\n      7: {contributions: 0, nameOfMonth: 'July', year: null},\r\n      8: {contributions: 0, nameOfMonth: 'August', year: null},\r\n      9: {contributions: 0, nameOfMonth: 'September', year: null},\r\n      10: {contributions: 0, nameOfMonth: 'October', year: null},\r\n      11: {contributions: 0, nameOfMonth: 'November', year: null},\r\n      12: {contributions: 0, nameOfMonth: 'December', year: null},\r\n    } \r\n\r\n    if (contributions && contributions.user) {\r\n      const contributionWeeks = Object.values(\r\n        contributions.user.contributionsCollection.contributionCalendar.weeks\r\n      );\r\n      contributionWeeks.map((week) => {\r\n        let weeklyContributions = null;\r\n        week.contributionDays.map(\r\n          (item) =>\r\n            (weeklyContributions = weeklyContributions + item.contributionCount)\r\n        );\r\n        const date = new Date(week.firstDay);\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        months[month].year = year;\r\n        months[month].contributions += weeklyContributions;\r\n      });\r\n    }\r\n    this.setState({\r\n      monthlyContributions: months,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { monthlyContributions } = this.state;\r\n    const chartData = Object.values(monthlyContributions).map(month => {\r\n      return { x: `${month.nameOfMonth}, ${month.year}`, y: month.contributions}\r\n    })\r\n\r\n    return (\r\n      <div className=\"overViewContributions\">\r\n        <ContentHeader title=\"github contributions\" />\r\n        <VictoryChart>\r\n          {/* <VictoryAxis dependentAxis tickFormat={[1, 2, 3, 4, 5]} style={{ tickLabels: { fontSize: 12 } }} /> */}\r\n          {/* <VictoryAxis style={{ tickLabels: { fontSize: 12, angle: 270} }} /> */}\r\n          <VictoryLine\r\n            style={{\r\n              data: { stroke: \"#c43a31\" },\r\n              parent: { border: \"1px solid #ccc\"}\r\n            }}\r\n            data={chartData}\r\n          />\r\n        </VictoryChart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default OverViewContributions;\r\n"]},"metadata":{},"sourceType":"module"}