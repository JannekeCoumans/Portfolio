{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\31622\\\\Documents\\\\React Apps\\\\portfolio\\\\src\\\\components\\\\LanguageSelect\\\\LanguageSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck, faChevronDown, faGlobe } from '@fortawesome/free-solid-svg-icons';\nimport { StorageHandler } from 'config/C4';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LanguageSelect = () => {\n  _s();\n\n  const [activeLanguage, setActiveLanguage] = useState(StorageHandler.get('language') || {\n    code: 'NL',\n    name: 'Nederlands'\n  });\n  const [languageSelectIsActive, setLanguageSelectIsActive] = useState(false);\n\n  const checkLanguage = () => {\n    const language = StorageHandler.get('language');\n\n    if (!language) {\n      const languageObject = {\n        code: 'NL',\n        name: 'Nederlands'\n      };\n      setActiveLanguage(languageObject);\n      StorageHandler.set('language', languageObject);\n    }\n  };\n\n  useEffect(() => {\n    checkLanguage();\n  });\n\n  const toggleLanguageSelect = () => {\n    setLanguageSelectIsActive(!languageSelectIsActive);\n  };\n\n  const changeLanguage = e => {\n    const {\n      value\n    } = e.target;\n    console.log(e.target.name);\n\n    if (value === 'NL') {\n      const languageObject = {\n        code: 'NL',\n        name: 'Nederlands'\n      };\n      setActiveLanguage(languageObject);\n      StorageHandler.set('language', languageObject);\n    } else if (value === 'EN') {\n      const languageObject = {\n        code: 'EN',\n        name: 'English'\n      };\n      setActiveLanguage(languageObject);\n      StorageHandler.set('language', languageObject);\n    }\n\n    toggleLanguageSelect(); // window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"languageSelect\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"languageSelect__button\",\n      onClick: toggleLanguageSelect,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faGlobe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: activeLanguage.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faChevronDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), languageSelectIsActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"languageSelect__menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: e => changeLanguage(e),\n        name: \"NL\",\n        className: activeLanguage.code === 'NL' ? 'active' : '',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Nederlands \", activeLanguage.code === 'NL' && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 183\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 133\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: e => changeLanguage(e),\n        name: \"EN\",\n        className: activeLanguage.code === 'EN' ? 'active' : '',\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"English \", activeLanguage.code === 'EN' && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 180\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 133\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LanguageSelect, \"eNq8sWjk4Twtf9hrWBP4GuxbRLQ=\");\n\n_c = LanguageSelect;\nexport default LanguageSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelect\");","map":{"version":3,"sources":["C:/Users/31622/Documents/React Apps/portfolio/src/components/LanguageSelect/LanguageSelect.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faCheck","faChevronDown","faGlobe","StorageHandler","LanguageSelect","activeLanguage","setActiveLanguage","get","code","name","languageSelectIsActive","setLanguageSelectIsActive","checkLanguage","language","languageObject","set","toggleLanguageSelect","changeLanguage","e","value","target","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faChevronDown, faGlobe } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { StorageHandler } from 'config/C4';\r\n\r\nconst LanguageSelect = () => {\r\n  const [activeLanguage, setActiveLanguage] = useState(StorageHandler.get('language') || {code: 'NL', name: 'Nederlands'});\r\n  const [languageSelectIsActive, setLanguageSelectIsActive] = useState(false);\r\n\r\n  const checkLanguage = () => {\r\n    const language = StorageHandler.get('language');\r\n    if (!language) {\r\n      const languageObject = {\r\n        code: 'NL',\r\n        name: 'Nederlands'\r\n      }\r\n      setActiveLanguage(languageObject);\r\n      StorageHandler.set('language', languageObject);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkLanguage();\r\n  })\r\n\r\n  const toggleLanguageSelect = () => {\r\n    setLanguageSelectIsActive(!languageSelectIsActive)\r\n  }\r\n\r\n  const changeLanguage = (e) => {\r\n    const { value } = e.target;\r\n    console.log(e.target.name);\r\n    if (value === 'NL') {\r\n      const languageObject = {\r\n        code: 'NL', name: 'Nederlands'\r\n      }\r\n      setActiveLanguage(languageObject);\r\n      StorageHandler.set('language', languageObject);\r\n    } else if (value === 'EN') {\r\n      const languageObject = {\r\n        code: 'EN', name: 'English'\r\n      }\r\n      setActiveLanguage(languageObject);\r\n      StorageHandler.set('language', languageObject);\r\n    }\r\n\r\n    toggleLanguageSelect();\r\n    // window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className=\"languageSelect\">\r\n    <button type=\"button\" className=\"languageSelect__button\" onClick={toggleLanguageSelect}>\r\n      <FontAwesomeIcon icon={faGlobe} />\r\n      <p>\r\n        <span>{activeLanguage.name}</span>\r\n        <FontAwesomeIcon icon={faChevronDown} />\r\n      </p>\r\n    </button>\r\n    {languageSelectIsActive && (\r\n      <div className=\"languageSelect__menu\">\r\n        <button type=\"button\" onClick={(e) => changeLanguage(e)} name=\"NL\" className={activeLanguage.code === 'NL' ? 'active' : ''}><span>Nederlands {activeLanguage.code === 'NL' && <FontAwesomeIcon icon={faCheck} />}</span></button>\r\n        <button type=\"button\" onClick={(e) => changeLanguage(e)} name=\"EN\" className={activeLanguage.code === 'EN' ? 'active' : ''}><span>English {activeLanguage.code === 'EN' && <FontAwesomeIcon icon={faCheck} />}</span></button>\r\n      </div>\r\n    )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LanguageSelect;"]},"metadata":{},"sourceType":"module"}