{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\31622\\\\Documents\\\\React Apps\\\\portfolio\\\\src\\\\components\\\\OverViewContributions\\\\OverViewContributions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { settings } from \"config/C4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OverViewContributions = () => {\n  _s();\n\n  const {\n    accessToken\n  } = settings;\n  const [contributions, setContributions] = useState({});\n\n  const getContributions = async (token, username) => {\n    const headers = {\n      Authorization: `bearer ${accessToken}`\n    };\n    const body = {\n      query: `query {\n                user(login: \"JannekeCoumans\") {\n                  name\n                  contributionsCollection {\n                    contributionCalendar {\n                      colors\n                      totalContributions\n                      weeks {\n                        contributionDays {\n                          color\n                          contributionCount\n                          date\n                          weekday\n                        }\n                        firstDay\n                      }\n                    }\n                  }\n                }\n              }`\n    };\n    const response = await fetch(\"https://api.github.com/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: headers\n    });\n    const result = await response.json();\n\n    if (!result.errors && result.data) {\n      setContributions(result.data);\n    }\n  };\n\n  useEffect(() => {\n    getContributions();\n  });\n  console.log(contributions);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"OverViewContributions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n\n_s(OverViewContributions, \"QIJjgtngvnT88CvadgeAyDr3NDM=\");\n\n_c = OverViewContributions;\nexport default OverViewContributions;\n\nvar _c;\n\n$RefreshReg$(_c, \"OverViewContributions\");","map":{"version":3,"sources":["C:/Users/31622/Documents/React Apps/portfolio/src/components/OverViewContributions/OverViewContributions.js"],"names":["React","useState","useEffect","settings","OverViewContributions","accessToken","contributions","setContributions","getContributions","token","username","headers","Authorization","body","query","response","fetch","method","JSON","stringify","result","json","errors","data","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAkBF,QAAxB;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMO,gBAAgB,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAClD,UAAMC,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAG,UAASP,WAAY;AADvB,KAAhB;AAGA,UAAMQ,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBiB,KAAb;AAsBA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFuD;AAG7DF,MAAAA,OAAO,EAAEA;AAHoD,KAAnC,CAA5B;AAKA,UAAMS,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB;;AACA,QAAI,CAACD,MAAM,CAACE,MAAR,IAAkBF,MAAM,CAACG,IAA7B,EAAmC;AAC/BhB,MAAAA,gBAAgB,CAACa,MAAM,CAACG,IAAR,CAAhB;AACH;AACF,GAnCD;;AAqCArB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,gBAAgB;AACjB,GAFQ,CAAT;AAIAgB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,aAAZ;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA9CD;;GAAMF,qB;;KAAAA,qB;AAgDN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { settings } from \"config/C4\";\r\n\r\nconst OverViewContributions = () => {\r\n  const { accessToken } = settings;\r\n  const [contributions, setContributions] = useState({});\r\n  const getContributions = async (token, username) => {\r\n    const headers = {\r\n      Authorization: `bearer ${accessToken}`,\r\n    };\r\n    const body = {\r\n      query: `query {\r\n                user(login: \"JannekeCoumans\") {\r\n                  name\r\n                  contributionsCollection {\r\n                    contributionCalendar {\r\n                      colors\r\n                      totalContributions\r\n                      weeks {\r\n                        contributionDays {\r\n                          color\r\n                          contributionCount\r\n                          date\r\n                          weekday\r\n                        }\r\n                        firstDay\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }`,\r\n    };\r\n    const response = await fetch(\"https://api.github.com/graphql\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: headers,\r\n    });\r\n    const result = await response.json();\r\n    if (!result.errors && result.data) {\r\n        setContributions(result.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getContributions();\r\n  })\r\n\r\n  console.log(contributions);\r\n  return <h1>OverViewContributions</h1>;\r\n};\r\n\r\nexport default OverViewContributions;\r\n"]},"metadata":{},"sourceType":"module"}